services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - FLASK_APP=market/__init__.py # or market/__init__.py if you want to be explicit
      - FLASK_ENV=development
      - DB_PASSWORD_FILE=/run/secrets/db_password
      - SECRET_KEY_FILE=/run/secrets/secret_key
    secrets:
      - db_password
      - secret_key
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "5001:5000"
    command: ["python3", "run.py"]
    volumes:
      - .:/app

    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 5

  postgres:
    image: postgres:16.3
    volumes:
      - postgres_data:/var/lib/postgresql/data
    secrets:
      - db_password
    environment:
      - POSTGRES_PASSWORD_FILE=/run/secrets/db_password
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

secrets:
  db_password:
    file: ./secrets/db_password.txt
  secret_key:
    file: ./secrets/secret_key.txt

networks:
  app-network:
    driver: bridge
